remember to also look into @scope and layers as well as subgrid

subgrid:
https://www.youtube.com/watch?v=UwV4LtO0nHo&list=PL4-IK0AVhVjM4Kjqw_zN-Y3neCFXWPDJ2&index=4

layers:
https://www.youtube.com/watch?v=_DeC_O9S9ag&list=PL4cUxeGkcC9jS4SctqK83Ag58a0_UEcE_&index=2

@scope:
https://www.youtube.com/watch?v=PkFuytYVqI8

grid:
https://www.youtube.com/watch?v=sKFW3wek21Q
https://www.youtube.com/watch?v=705XCEruZFs
https://www.youtube.com/watch?v=rg7Fvvl3taU&t=4s
https://www.youtube.com/watch?v=xPuYbmmPdEM&list=PL4cUxeGkcC9hk02lFb6EkdXF2DYGl4Gg4&pp=iAQB

//! using the below code
@mixin replace-text($image: url("/images/mail.svg"), $x: 50%, $y: 50%) {
  //? can apparently use object structure to shorthand properties similar to &#{$var}
  background: {
    //? background-image
    image: $image;
    //? background-repeat
    repeat: no-repeat;
    //? background-position
    position: $x $y;
  }
}

.x-name{
  @include replace-text();
}

//! results in
.x-name {
  background-image: url("/images/mail.svg");
  background-repeat: no-repeat;
  background-position: 50% 50%;
}





























@use '../abstracts/' as *;

// need to do this to get access to the map in another map
// map-get($themes, theme-1) theme-1 being the first nested map; dark being the key of a further nested map to get from theme-1 in themes
@debug map-get(map-get($themes, theme-1), dark);

// map-get($themes, theme-1) theme-1 being the first nested map; light being the key of a further nested map in theme-1 to remove; returns a new map and leaves the original unaltered
$test: map-remove(map-get($themes, theme-1), light);
@debug "removed:: ", map-get(map-get($themes, theme-1), light);
@debug $test;

//map-merge
@debug map-merge(
  // first map
  map-get($themes, theme-1),
  (
    // second
    test: (
      "a": "d",
      "b": "d",
      "c": "d",
    ),
  )
);